/**
 * Ilyde Apis
 * OpenApi interface which exposes Ilyde resources to frontends
 *
 * OpenAPI spec version: 0.2.0
 * Contact: alessiofiorentino@hopenly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Artifacts } from '../models';
import { Experiment } from '../models';
import { Generic } from '../models';
import { InlineResponse200 } from '../models';
import { Status } from '../models';
/**
 * ExperimentsApi - axios parameter creator
 * @export
 */
export declare const ExperimentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Fetch logs of a given experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchExperimentLogs: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get artifacts of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifacts: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get results of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentResults: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieve an experiment
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveExperiment: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get state of a experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateExperiment: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Stop a experimentning experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopExperiment: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Submit an experiment
     * @param {Experiment} body experiment payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitExperiment: (body: Experiment, options?: any) => Promise<RequestArgs>;
};
/**
 * ExperimentsApi - functional programming interface
 * @export
 */
export declare const ExperimentsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Fetch logs of a given experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchExperimentLogs(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Generic>>;
    /**
     *
     * @summary Get artifacts of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifacts(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Artifacts>>;
    /**
     *
     * @summary Get results of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentResults(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Generic>>;
    /**
     *
     * @summary Retrieve an experiment
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveExperiment(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Experiment>>;
    /**
     *
     * @summary Get state of a experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateExperiment(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse200>>;
    /**
     *
     * @summary Stop a experimentning experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopExperiment(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Status>>;
    /**
     *
     * @summary Submit an experiment
     * @param {Experiment} body experiment payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitExperiment(body: Experiment, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Status>>;
};
/**
 * ExperimentsApi - factory interface
 * @export
 */
export declare const ExperimentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Fetch logs of a given experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchExperimentLogs(id: string, options?: any): AxiosPromise<Generic>;
    /**
     *
     * @summary Get artifacts of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifacts(id: string, options?: any): AxiosPromise<Artifacts>;
    /**
     *
     * @summary Get results of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentResults(id: string, options?: any): AxiosPromise<Generic>;
    /**
     *
     * @summary Retrieve an experiment
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveExperiment(id: string, options?: any): AxiosPromise<Experiment>;
    /**
     *
     * @summary Get state of a experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateExperiment(id: string, options?: any): AxiosPromise<InlineResponse200>;
    /**
     *
     * @summary Stop a experimentning experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopExperiment(id: string, options?: any): AxiosPromise<Status>;
    /**
     *
     * @summary Submit an experiment
     * @param {Experiment} body experiment payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitExperiment(body: Experiment, options?: any): AxiosPromise<Status>;
};
/**
 * ExperimentsApi - object-oriented interface
 * @export
 * @class ExperimentsApi
 * @extends {BaseAPI}
 */
export declare class ExperimentsApi extends BaseAPI {
    /**
     *
     * @summary Fetch logs of a given experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    fetchExperimentLogs(id: string, options?: any): Promise<import("axios").AxiosResponse<Generic>>;
    /**
     *
     * @summary Get artifacts of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    getExperimentArtifacts(id: string, options?: any): Promise<import("axios").AxiosResponse<Artifacts>>;
    /**
     *
     * @summary Get results of a succeded experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    getExperimentResults(id: string, options?: any): Promise<import("axios").AxiosResponse<Generic>>;
    /**
     *
     * @summary Retrieve an experiment
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    retrieveExperiment(id: string, options?: any): Promise<import("axios").AxiosResponse<Experiment>>;
    /**
     *
     * @summary Get state of a experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    stateExperiment(id: string, options?: any): Promise<import("axios").AxiosResponse<InlineResponse200>>;
    /**
     *
     * @summary Stop a experimentning experiment.
     * @param {string} id The ID of the experiment resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    stopExperiment(id: string, options?: any): Promise<import("axios").AxiosResponse<Status>>;
    /**
     *
     * @summary Submit an experiment
     * @param {Experiment} body experiment payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExperimentsApi
     */
    submitExperiment(body: Experiment, options?: any): Promise<import("axios").AxiosResponse<Status>>;
}
