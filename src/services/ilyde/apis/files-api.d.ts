/**
 * Ilyde Apis
 * OpenApi interface which exposes Ilyde resources to frontends
 *
 * OpenAPI spec version: 0.2.0
 * Contact: alessiofiorentino@hopenly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
/**
 * FilesApi - axios parameter creator
 * @export
 */
export declare const FilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Download experiment artifact
     * @summary Download experiment artifact
     * @param {string} id The ID of the experiment resource
     * @param {string} path File&#x27;s path to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifact: (id: string, path: string, options?: any) => Promise<RequestArgs>;
    /**
     * Download project's file
     * @summary Download project's file
     * @param {string} id The ID of the project resource
     * @param {string} path File&#x27;s path to download
     * @param {string} version file&#x27;s version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectFile: (id: string, path: string, version: string, options?: any) => Promise<RequestArgs>;
};
/**
 * FilesApi - functional programming interface
 * @export
 */
export declare const FilesApiFp: (configuration?: Configuration) => {
    /**
     * Download experiment artifact
     * @summary Download experiment artifact
     * @param {string} id The ID of the experiment resource
     * @param {string} path File&#x27;s path to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifact(id: string, path: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Download project's file
     * @summary Download project's file
     * @param {string} id The ID of the project resource
     * @param {string} path File&#x27;s path to download
     * @param {string} version file&#x27;s version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectFile(id: string, path: string, version: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * FilesApi - factory interface
 * @export
 */
export declare const FilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Download experiment artifact
     * @summary Download experiment artifact
     * @param {string} id The ID of the experiment resource
     * @param {string} path File&#x27;s path to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getExperimentArtifact(id: string, path: string, options?: any): AxiosPromise<string>;
    /**
     * Download project's file
     * @summary Download project's file
     * @param {string} id The ID of the project resource
     * @param {string} path File&#x27;s path to download
     * @param {string} version file&#x27;s version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectFile(id: string, path: string, version: string, options?: any): AxiosPromise<string>;
};
/**
 * FilesApi - object-oriented interface
 * @export
 * @class FilesApi
 * @extends {BaseAPI}
 */
export declare class FilesApi extends BaseAPI {
    /**
     * Download experiment artifact
     * @summary Download experiment artifact
     * @param {string} id The ID of the experiment resource
     * @param {string} path File&#x27;s path to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilesApi
     */
    getExperimentArtifact(id: string, path: string, options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     * Download project's file
     * @summary Download project's file
     * @param {string} id The ID of the project resource
     * @param {string} path File&#x27;s path to download
     * @param {string} version file&#x27;s version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilesApi
     */
    getProjectFile(id: string, path: string, version: string, options?: any): Promise<import("axios").AxiosResponse<string>>;
}
