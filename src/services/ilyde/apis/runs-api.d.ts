/**
 * Ilyde Apis
 * OpenApi interface which exposes Ilyde resources to frontends
 *
 * OpenAPI spec version: 0.2.0
 * Contact: alessiofiorentino@hopenly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Generic } from '../models';
import { InlineResponse200 } from '../models';
import { Run } from '../models';
import { Status } from '../models';
/**
 * RunsApi - axios parameter creator
 * @export
 */
export declare const RunsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Fetch logs of a given run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRunLogs: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieve a run
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveRun: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get state of a run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateRun: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Stop a running run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopRun: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Submit a run
     * @param {Run} body run payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRun: (body: Run, options?: any) => Promise<RequestArgs>;
};
/**
 * RunsApi - functional programming interface
 * @export
 */
export declare const RunsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Fetch logs of a given run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRunLogs(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Generic>>;
    /**
     *
     * @summary Retrieve a run
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveRun(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Run>>;
    /**
     *
     * @summary Get state of a run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateRun(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InlineResponse200>>;
    /**
     *
     * @summary Stop a running run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopRun(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Status>>;
    /**
     *
     * @summary Submit a run
     * @param {Run} body run payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRun(body: Run, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Status>>;
};
/**
 * RunsApi - factory interface
 * @export
 */
export declare const RunsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Fetch logs of a given run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRunLogs(id: string, options?: any): AxiosPromise<Generic>;
    /**
     *
     * @summary Retrieve a run
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveRun(id: string, options?: any): AxiosPromise<Run>;
    /**
     *
     * @summary Get state of a run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stateRun(id: string, options?: any): AxiosPromise<InlineResponse200>;
    /**
     *
     * @summary Stop a running run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    stopRun(id: string, options?: any): AxiosPromise<Status>;
    /**
     *
     * @summary Submit a run
     * @param {Run} body run payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRun(body: Run, options?: any): AxiosPromise<Status>;
};
/**
 * RunsApi - object-oriented interface
 * @export
 * @class RunsApi
 * @extends {BaseAPI}
 */
export declare class RunsApi extends BaseAPI {
    /**
     *
     * @summary Fetch logs of a given run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RunsApi
     */
    fetchRunLogs(id: string, options?: any): Promise<import("axios").AxiosResponse<Generic>>;
    /**
     *
     * @summary Retrieve a run
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RunsApi
     */
    retrieveRun(id: string, options?: any): Promise<import("axios").AxiosResponse<Run>>;
    /**
     *
     * @summary Get state of a run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RunsApi
     */
    stateRun(id: string, options?: any): Promise<import("axios").AxiosResponse<InlineResponse200>>;
    /**
     *
     * @summary Stop a running run.
     * @param {string} id The ID of the run resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RunsApi
     */
    stopRun(id: string, options?: any): Promise<import("axios").AxiosResponse<Status>>;
    /**
     *
     * @summary Submit a run
     * @param {Run} body run payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RunsApi
     */
    submitRun(body: Run, options?: any): Promise<import("axios").AxiosResponse<Status>>;
}
